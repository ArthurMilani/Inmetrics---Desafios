<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3 (Python 3.10.12 on linux)" generated="2025-06-16T19:12:55.896878" rpa="false" schemaversion="5">
<suite id="s1" name="Inmetrics---Desafios" source="/home/arthur/Inmetrics/Inmetrics---Desafios">
<suite id="s1-s1" name="Robot Tests" source="/home/arthur/Inmetrics/Inmetrics---Desafios/Robot_Tests">
<suite id="s1-s1-s1" name="TestCases" source="/home/arthur/Inmetrics/Inmetrics---Desafios/Robot_Tests/TestCases">
<suite id="s1-s1-s1-s1" name="Gherkins" source="/home/arthur/Inmetrics/Inmetrics---Desafios/Robot_Tests/TestCases/gherkins">
<suite id="s1-s1-s1-s1-s1" name="productsGherkins" source="/home/arthur/Inmetrics/Inmetrics---Desafios/Robot_Tests/TestCases/gherkins/productsGherkins.robot">
<test id="s1-s1-s1-s1-s1-t1" name="POSITIVE - Criar produto com sucesso" line="10">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:12:56.165147" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:12:56.164819" elapsed="0.000455"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:12:56.165729" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0e23df0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:12:56.165448" elapsed="0.000515"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:12:58.273554" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:12:58.273847" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:12:58 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8"}
 
 </msg>
<msg time="2025-06-16T19:12:58.274086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:12:56.166107" elapsed="2.108069"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.274943" elapsed="0.000134"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.275257" elapsed="0.000091"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.275470" elapsed="0.000119"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.275715" elapsed="0.000077"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.275924" elapsed="0.000085"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:12:58.274375" elapsed="0.001697"/>
</branch>
<status status="PASS" start="2025-06-16T19:12:58.274342" elapsed="0.001763"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.276958" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:12:58.276182" elapsed="0.000889"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:56.164087" elapsed="2.113093"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:56.163562" elapsed="2.113693"/>
</kw>
<kw name="QUANDO ele faz a requisição de criar um produto no sistema com dados corretos" owner="productsSteps">
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Name" owner="FakerLibrary">
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:12:58.278449" elapsed="0.000228"/>
</kw>
<msg time="2025-06-16T19:12:58.278782" level="INFO">${name} = Joaquim Dias</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.278185" elapsed="0.000694"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:12:58.279319" elapsed="0.000306"/>
</kw>
<msg time="2025-06-16T19:12:58.279728" level="INFO">${description} = Illum magni fugiat voluptas neque repudiandae corporis. Illo quisquam facilis rerum.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.279047" elapsed="0.000769"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:12:58.280228" elapsed="0.000267"/>
</kw>
<msg time="2025-06-16T19:12:58.280600" level="INFO">${price} = 794.95</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.279986" elapsed="0.000693"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:12:58.281098" elapsed="0.000511"/>
</kw>
<msg time="2025-06-16T19:12:58.281882" level="INFO">${quantity} = 399</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.280845" elapsed="0.001200"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:12:58.283467" elapsed="0.000316"/>
</kw>
<msg time="2025-06-16T19:12:58.283904" level="INFO">${status} = False</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.282965" elapsed="0.001040"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.284585" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8 }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:12:58.284176" elapsed="0.000563"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.285558" level="INFO">${body} = {'name': 'Joaquim Dias', 'description': 'Illum magni fugiat voluptas neque repudiandae corporis. Illo quisquam facilis rerum.', 'price': 794.95, 'quantity': 399, 'status': False}</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:12:58.284996" elapsed="0.000760"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:12:58.302122" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8', 'Content-Length': '178'} 
 body=b'{"name": "Joaquim Dias", "description": "Illum magni fugiat voluptas neque repudiandae corporis. Illo quisquam facilis rerum.", "price": 794.95, "quantity": 399, "status": false}' 
 </msg>
<msg time="2025-06-16T19:12:58.302451" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:12:58 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 36,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:12:58.302838" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:12:58.286023" elapsed="0.016953"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.304643" level="INFO">Response: {'id': 36, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:12:58.303350" elapsed="0.001459"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:12:58.304931" elapsed="0.000488"/>
</return>
<msg time="2025-06-16T19:12:58.305617" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:12:58.277859" elapsed="0.027903"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.306614" level="INFO">${status_code} = 201</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:12:58.305968" elapsed="0.000802"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.307480" level="INFO">${status_code} = 201</msg>
<msg time="2025-06-16T19:12:58.307730" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:12:58.307063" elapsed="0.000806"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.277490" elapsed="0.030598"/>
</kw>
<kw name="ENTÃO o sistema deve salvar o produto no banco de dados e retornar sucesso" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.309294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:12:58.309048" elapsed="0.000414"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.308638" elapsed="0.000937"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:56.162136" elapsed="2.147673"/>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="NEGATIVE - Criar produto com dados inválidos" line="16">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.313966" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:12:58.313641" elapsed="0.000443"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:12:58.314941" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0e2dfc0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:12:58.314260" elapsed="0.001527"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:12:58.415844" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:12:58.416177" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:12:58 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8"}
 
 </msg>
<msg time="2025-06-16T19:12:58.416474" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:12:58.316095" elapsed="0.100478"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.417458" elapsed="0.000216"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.417852" elapsed="0.000093"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.418071" elapsed="0.000084"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.418308" elapsed="0.000106"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.418554" elapsed="0.000087"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:12:58.416820" elapsed="0.001892"/>
</branch>
<status status="PASS" start="2025-06-16T19:12:58.416775" elapsed="0.001971"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.419367" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:12:58.418825" elapsed="0.000671"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.313298" elapsed="0.106317"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.312747" elapsed="0.106940"/>
</kw>
<kw name="QUANDO ele faz a requisição de criar um produto no sistema com dados inválidos" owner="productsSteps">
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:12:58.421030" elapsed="0.000229"/>
</kw>
<msg time="2025-06-16T19:12:58.421375" level="INFO">${name} = </msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.420757" elapsed="0.000736"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${description}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:12:58.422048" elapsed="0.000246"/>
</kw>
<msg time="2025-06-16T19:12:58.422402" level="INFO">${description} = Descrição Inválida</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.421642" elapsed="0.000851"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${price}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:12:58.422885" elapsed="0.000196"/>
</kw>
<msg time="2025-06-16T19:12:58.423181" level="INFO">${price} = invalid</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.422634" elapsed="0.000637"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${quantity}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:12:58.423699" elapsed="0.000178"/>
</kw>
<msg time="2025-06-16T19:12:58.423974" level="INFO">${quantity} = -10</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.423436" elapsed="0.000643"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${status}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:12:58.424470" elapsed="0.000189"/>
</kw>
<msg time="2025-06-16T19:12:58.424761" level="INFO">${status} = False</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.424229" elapsed="0.000615"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.425295" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8 }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:12:58.425000" elapsed="0.000404"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.425921" level="INFO">${body} = {'name': '', 'description': 'Descrição Inválida', 'price': 'invalid', 'quantity': '-10', 'status': False}</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:12:58.425548" elapsed="0.000500"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:12:58.435379" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8', 'Content-Length': '120'} 
 body=b'{"name": "", "description": "Descri\\u00e7\\u00e3o Inv\\u00e1lida", "price": "invalid", "quantity": "-10", "status": false}' 
 </msg>
<msg time="2025-06-16T19:12:58.435737" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=400, reason=BAD REQUEST 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:12:58 GMT', 'Content-Type': 'application/json', 'Content-Length': '34', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "msg": "Invalid data types"
}
 
 </msg>
<msg time="2025-06-16T19:12:58.435987" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:12:58.426188" elapsed="0.009891"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.437233" level="INFO">Response: {'msg': 'Invalid data types'} - Status Code: 400</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:12:58.436447" elapsed="0.000912"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:12:58.437467" elapsed="0.000095"/>
</return>
<msg time="2025-06-16T19:12:58.437761" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>name=</arg>
<arg>description=Descrição Inválida</arg>
<arg>price=invalid</arg>
<arg>quantity=-10</arg>
<arg>status=${False}</arg>
<status status="PASS" start="2025-06-16T19:12:58.420322" elapsed="0.017560"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.438775" level="INFO">${status_code} = 400</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:12:58.438075" elapsed="0.000846"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.439588" level="INFO">${status_code} = 400</msg>
<msg time="2025-06-16T19:12:58.439775" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:12:58.439168" elapsed="0.000689"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.419935" elapsed="0.020064"/>
</kw>
<kw name="ENTÃO o sistema deve retornar erro de dados inválidos" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.440930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:12:58.440642" elapsed="0.000421"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.440268" elapsed="0.000892"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.311877" elapsed="0.129831"/>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="NEGATIVE - Criar produto com dados repetidos" line="22">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.444849" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:12:58.444523" elapsed="0.000452"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:12:58.446226" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0eb4ac0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:12:58.445146" elapsed="0.001448"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:12:58.542592" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:12:58.542853" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:12:58 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8"}
 
 </msg>
<msg time="2025-06-16T19:12:58.543098" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:12:58.446802" elapsed="0.096381"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.543961" elapsed="0.000146"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.544249" elapsed="0.000087"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.544456" elapsed="0.000090"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.544666" elapsed="0.000081"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:12:58.544859" elapsed="0.000088"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:12:58.543371" elapsed="0.001644"/>
</branch>
<status status="PASS" start="2025-06-16T19:12:58.543342" elapsed="0.001706"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.545619" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:12:58.545123" elapsed="0.000609"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.444176" elapsed="0.101661"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.443735" elapsed="0.102192"/>
</kw>
<kw name="QUANDO ele faz a requisição de criar um produto no sistema com dados repetidos" owner="productsSteps">
<kw name="Name" owner="FakerLibrary">
<msg time="2025-06-16T19:12:58.546696" level="INFO">${fake_name} = Ana Liz Ferreira</msg>
<var>${fake_name}</var>
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:12:58.546484" elapsed="0.000474"/>
</kw>
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:12:58.548317" elapsed="0.000252"/>
</kw>
<msg time="2025-06-16T19:12:58.548687" level="INFO">${name} = Ana Liz Ferreira</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.547954" elapsed="0.000871"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:12:58.550225" elapsed="0.000236"/>
</kw>
<msg time="2025-06-16T19:12:58.550574" level="INFO">${description} = Sit suscipit voluptatibus nam placeat excepturi. Quos officia distinctio debitis nam animi.
Accusamus laboriosam distinctio maxime. Nulla doloribus provident aut molestiae cum velit.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.549881" elapsed="0.000797"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:12:58.551169" elapsed="0.000301"/>
</kw>
<msg time="2025-06-16T19:12:58.551621" level="INFO">${price} = 627.31</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.550881" elapsed="0.000874"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:12:58.552263" elapsed="0.000326"/>
</kw>
<msg time="2025-06-16T19:12:58.552775" level="INFO">${quantity} = 499</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.551935" elapsed="0.000958"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:12:58.553421" elapsed="0.000254"/>
</kw>
<msg time="2025-06-16T19:12:58.553814" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:12:58.553072" elapsed="0.000847"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.554473" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8 }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:12:58.554092" elapsed="0.000491"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:12:58.555265" level="INFO">${body} = {'name': 'Ana Liz Ferreira', 'description': 'Sit suscipit voluptatibus nam placeat excepturi. Quos officia distinctio debitis nam animi.\nAccusamus laboriosam distinctio maxime. Nulla doloribus provid...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:12:58.554841" elapsed="0.000526"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.584603" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8', 'Content-Length': '280'} 
 body=b'{"name": "Ana Liz Ferreira", "description": "Sit suscipit voluptatibus nam placeat excepturi. Quos officia distinctio debitis nam animi.\\nAccusamus laboriosam distinctio maxime. Nulla doloribus provident aut molestiae cum velit.", "price": 627.31, "quantity": 499, "status": true}' 
 </msg>
<msg time="2025-06-16T19:13:00.584880" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 37,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:00.585143" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:12:58.555601" elapsed="2.029668"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.586345" level="INFO">Response: {'id': 37, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:00.585563" elapsed="0.000899"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:00.586564" elapsed="0.000096"/>
</return>
<msg time="2025-06-16T19:13:00.586789" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>name=${fake_name}</arg>
<status status="PASS" start="2025-06-16T19:12:58.547211" elapsed="2.039665"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.587627" level="INFO">${product_id} = 37</msg>
<var>${product_id}</var>
<arg>${response.json()['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.587019" elapsed="0.000689"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.588058" level="INFO">${product_id} = 37</msg>
<msg time="2025-06-16T19:13:00.588219" level="INFO">${product_id} = None</msg>
<var>${product_id}</var>
<arg>${product_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:00.587843" elapsed="0.000482"/>
</kw>
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.589226" elapsed="0.000169"/>
</kw>
<msg time="2025-06-16T19:13:00.589489" level="INFO">${name} = Ana Liz Ferreira</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.588941" elapsed="0.000626"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:00.589927" elapsed="0.000237"/>
</kw>
<msg time="2025-06-16T19:13:00.590362" level="INFO">${description} = Deleniti accusamus ad ut. Quia voluptates modi minus unde inventore nisi. Saepe repellat iusto at aspernatur itaque itaque.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.589696" elapsed="0.000769"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:00.590907" elapsed="0.000398"/>
</kw>
<msg time="2025-06-16T19:13:00.591414" level="INFO">${price} = 672.79</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.590622" elapsed="0.000872"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:00.591927" elapsed="0.000256"/>
</kw>
<msg time="2025-06-16T19:13:00.592307" level="INFO">${quantity} = 264</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.591693" elapsed="0.000710"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:00.592812" elapsed="0.000165"/>
</kw>
<msg time="2025-06-16T19:13:00.593096" level="INFO">${status} = False</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.592560" elapsed="0.000614"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.593635" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8 }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.593311" elapsed="0.000431"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.594565" level="INFO">${body} = {'name': 'Ana Liz Ferreira', 'description': 'Deleniti accusamus ad ut. Quia voluptates modi minus unde inventore nisi. Saepe repellat iusto at aspernatur itaque itaque.', 'price': 672.79, 'quantity': ...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.593905" elapsed="0.000802"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.604427" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4Mzc4fQ.1McpYvliZWoFuTRRBT4iCHeeAsG0qTv0InV8lr2kdW8', 'Content-Length': '221'} 
 body=b'{"name": "Ana Liz Ferreira", "description": "Deleniti accusamus ad ut. Quia voluptates modi minus unde inventore nisi. Saepe repellat iusto at aspernatur itaque itaque.", "price": 672.79, "quantity": 264, "status": false}' 
 </msg>
<msg time="2025-06-16T19:13:00.604765" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=409, reason=CONFLICT 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '43', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "msg": "Product name already exists"
}
 
 </msg>
<msg time="2025-06-16T19:13:00.605019" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:13:00.594874" elapsed="0.010234"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.606097" level="INFO">Response: {'msg': 'Product name already exists'} - Status Code: 409</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:00.605337" elapsed="0.000892"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:00.606356" elapsed="0.000119"/>
</return>
<msg time="2025-06-16T19:13:00.606718" level="INFO">${response} = &lt;Response [409]&gt;</msg>
<var>${response}</var>
<arg>name=${fake_name}</arg>
<status status="PASS" start="2025-06-16T19:13:00.588561" elapsed="0.018306"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.607621" level="INFO">${status_code} = 409</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.607052" elapsed="0.000656"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.608141" level="INFO">${status_code} = 409</msg>
<msg time="2025-06-16T19:13:00.608270" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:00.607891" elapsed="0.000451"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.546206" elapsed="2.062241"/>
</kw>
<kw name="ENTÃO o sistema deve retornar erro de dados repetidos" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.609793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${status_code}</arg>
<arg>409</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:13:00.609535" elapsed="0.000408"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.609105" elapsed="0.000974"/>
</kw>
<status status="PASS" start="2025-06-16T19:12:58.443096" elapsed="2.167859"/>
</test>
<test id="s1-s1-s1-s1-s1-t4" name="POSITIVE - Atualizar produto com sucesso" line="29">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.614259" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:00.613830" elapsed="0.000636"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.615607" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0cd1720&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:00.614743" elapsed="0.001312"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.712441" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:00.712873" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE"}
 
 </msg>
<msg time="2025-06-16T19:13:00.713170" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:00.616402" elapsed="0.096865"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.714085" elapsed="0.000144"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.714391" elapsed="0.000093"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.714634" elapsed="0.000087"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.714859" elapsed="0.000082"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.715089" elapsed="0.000097"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:00.713477" elapsed="0.001777"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:00.713443" elapsed="0.001851"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.716055" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:00.715374" elapsed="0.000876"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.613500" elapsed="0.102875"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.612935" elapsed="0.103519"/>
</kw>
<kw name="QUANDO ele faz a requisição de atualizar o produto com dados corretos" owner="productsSteps">
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Name" owner="FakerLibrary">
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:13:00.718545" elapsed="0.000801"/>
</kw>
<msg time="2025-06-16T19:13:00.719626" level="INFO">${name} = Dr. Matteo Cardoso</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.718094" elapsed="0.001798"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:00.720799" elapsed="0.000440"/>
</kw>
<msg time="2025-06-16T19:13:00.721414" level="INFO">${description} = Velit quas velit nulla. Laudantium doloribus ex non expedita minima eos.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.720256" elapsed="0.001392"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:00.722416" elapsed="0.000542"/>
</kw>
<msg time="2025-06-16T19:13:00.723136" level="INFO">${price} = 916.37</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.721934" elapsed="0.001383"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:00.723980" elapsed="0.000328"/>
</kw>
<msg time="2025-06-16T19:13:00.724459" level="INFO">${quantity} = 789</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.723542" elapsed="0.001149"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:00.725402" elapsed="0.000258"/>
</kw>
<msg time="2025-06-16T19:13:00.725799" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.724974" elapsed="0.000938"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.726518" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.726069" elapsed="0.000793"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.728004" level="INFO">${body} = {'name': 'Dr. Matteo Cardoso', 'description': 'Velit quas velit nulla. Laudantium doloribus ex non expedita minima eos.', 'price': 916.37, 'quantity': 789, 'status': True}</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.727176" elapsed="0.001233"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.754022" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE', 'Content-Length': '171'} 
 body=b'{"name": "Dr. Matteo Cardoso", "description": "Velit quas velit nulla. Laudantium doloribus ex non expedita minima eos.", "price": 916.37, "quantity": 789, "status": true}' 
 </msg>
<msg time="2025-06-16T19:13:00.754350" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 39,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:00.754630" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:13:00.728727" elapsed="0.025997"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.755946" level="INFO">Response: {'id': 39, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:00.754955" elapsed="0.001144"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:00.756217" elapsed="0.000119"/>
</return>
<msg time="2025-06-16T19:13:00.756484" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:13:00.717675" elapsed="0.038907"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 201">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.757526" level="INFO">${product_id} = 39</msg>
<var>${product_id}</var>
<arg>${response.json()['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.757085" elapsed="0.000526"/>
</kw>
<kw name="Atualizar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Name" owner="FakerLibrary">
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:13:00.758560" elapsed="0.000197"/>
</kw>
<msg time="2025-06-16T19:13:00.758867" level="INFO">${name} = Benício Fonseca</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.758274" elapsed="0.000701"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:00.759427" elapsed="0.000322"/>
</kw>
<msg time="2025-06-16T19:13:00.759917" level="INFO">${description} = Error rerum sunt minima officiis dolor aliquid repellendus. Iure reiciendis dignissimos quos iste incidunt. Perferendis mollitia sapiente temporibus officia.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.759137" elapsed="0.000944"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:00.760694" elapsed="0.000333"/>
</kw>
<msg time="2025-06-16T19:13:00.761151" level="INFO">${price} = 928.78</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.760344" elapsed="0.000902"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:00.761706" elapsed="0.000873"/>
</kw>
<msg time="2025-06-16T19:13:00.762737" level="INFO">${quantity} = 710</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.761409" elapsed="0.001457"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:00.763454" elapsed="0.000250"/>
</kw>
<msg time="2025-06-16T19:13:00.763812" level="INFO">${status} = False</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.763112" elapsed="0.000816"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.764468" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.764112" elapsed="0.000467"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.765349" level="INFO">${body} = {'name': 'Benício Fonseca', 'description': 'Error rerum sunt minima officiis dolor aliquid repellendus. Iure reiciendis dignissimos quos iste incidunt. Perferendis mollitia sapiente temporibus officia...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.764755" elapsed="0.000755"/>
</kw>
<kw name="PUT" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.776238" level="INFO">PUT Request : url=http://172.23.208.1/products/update/39 
 path_url=/products/update/39 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE', 'Content-Length': '259'} 
 body=b'{"name": "Ben\\u00edcio Fonseca", "description": "Error rerum sunt minima officiis dolor aliquid repellendus. Iure reiciendis dignissimos quos iste incidunt. Perferendis mollitia sapiente temporibus officia.", "price": 928.78, "quantity": 710, "status": false}' 
 </msg>
<msg time="2025-06-16T19:13:00.777104" level="INFO">PUT Response : url=http://172.23.208.1/products/update/39 
 status=500, reason=INTERNAL SERVER ERROR 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:00 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '13560', 'Connection': 'keep-alive'} 
 body=&lt;!doctype html&gt;
&lt;html lang=en&gt;
  &lt;head&gt;
    &lt;title&gt;TypeError: The view function for &amp;#39;products.update&amp;#39; did not return a valid response. The function either returned None or ended without a return statement.
 // Werkzeug Debugger&lt;/title&gt;
    &lt;link rel="stylesheet" href="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=style.css"&gt;
    &lt;link rel="shortcut icon"
        href="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=console.png"&gt;
    &lt;script src="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=debugger.js"&gt;&lt;/script&gt;
    &lt;script&gt;
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "nzYGqgqTzsZzpySqpUpH";
    &lt;/script&gt;
  &lt;/head&gt;
  &lt;body style="background-color: #fff"&gt;
    &lt;div class="debugger"&gt;
&lt;h1&gt;TypeError&lt;/h1&gt;
&lt;div class="detail"&gt;
  &lt;p class="errormsg"&gt;TypeError: The view function for &amp;#39;products.update&amp;#39; did not return a valid response. The function either returned None or ended without a return statement.
&lt;/p&gt;
&lt;/div&gt;
&lt;h2 class="traceback"&gt;Traceback &lt;em&gt;(most recent call last)&lt;/em&gt;&lt;/h2&gt;
&lt;div class="traceback"&gt;
  &lt;h3&gt;&lt;/h3&gt;
  &lt;ul&gt;&lt;li&gt;&lt;div class="frame" id="frame-139871973250032"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;1536&lt;/em&gt;,
      in &lt;code class="function"&gt;__call__&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;) -&amp;gt; cabc.Iterable[bytes]:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;The WSGI server calls the Flask application object as the&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;WSGI application. This calls :meth:`wsgi_app`, which can be&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;wrapped to apply middleware.&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return self.wsgi_app(environ, start_response)&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973250368"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;1514&lt;/em&gt;,
      in &lt;code class="function"&gt;wsgi_app&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;try:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;ctx.push()&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.full_dispatch_request()&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = e&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.handle_exception(e)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except:  # noqa: B001&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = sys.exc_info()[1]&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;raise&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;return response(environ, start_response)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;finally:&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973253168"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask_cors/extension.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;176&lt;/em&gt;,
      in &lt;code class="function"&gt;wrapped_function&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;# These error handlers will still respect the behavior of the route&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;if options.get(&amp;#34;intercept_exceptions&amp;#34;, True):&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;def _after_request_decorator(f):&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;def wrapped_function(*args, **kwargs):&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;return cors_after_request(app.make_response(f(*args, **kwargs)))&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;return wrapped_function&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;if hasattr(app, &amp;#34;handle_exception&amp;#34;):&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;app.handle_exception = _after_request_decorator(app.handle_exception)&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973250256"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;1511&lt;/em&gt;,
      in &lt;code class="function"&gt;wsgi_app&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;ctx = self.request_context(environ)&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;error: BaseException | None = None&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;try:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;try:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;ctx.push()&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.full_dispatch_request()&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = e&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.handle_exception(e)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except:  # noqa: B001&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = sys.exc_info()[1]&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973250592"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;920&lt;/em&gt;,
      in &lt;code class="function"&gt;full_dispatch_request&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;rv = self.preprocess_request()&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;if rv is None:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;rv = self.dispatch_request()&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;except Exception as e:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;rv = self.handle_user_exception(e)&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return self.finalize_request(rv)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;def finalize_request(&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;self,&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;rv: ft.ResponseReturnValue | HTTPException,&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;from_error_handler: bool = False,&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973253280"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;939&lt;/em&gt;,
      in &lt;code class="function"&gt;finalize_request&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;with the `from_error_handler` flag.  If enabled, failures in&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;response processing will be logged and otherwise ignored.&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;:internal:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;response = self.make_response(rv)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;try:&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;response = self.process_response(response)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;request_finished.send(&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;self, _async_wrapper=self.ensure_sync, response=response&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973253392"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;1212&lt;/em&gt;,
      in &lt;code class="function"&gt;make_response&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;&amp;#34; (body, status), or (body, headers).&amp;#34;&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;)&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;# the body must not be None&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;if rv is None:&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;raise TypeError(&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;f&amp;#34;The view function for {request.endpoint!r} did not&amp;#34;&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;&amp;#34; return a valid response. The function either returned&amp;#34;&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;&amp;#34; None or ended without a return statement.&amp;#34;&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/ul&gt;
  &lt;blockquote&gt;TypeError: The view function for &amp;#39;products.update&amp;#39; did not return a valid response. The function either returned None or ended without a return statement.
&lt;/blockquote&gt;
&lt;/div&gt;

... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-06-16T19:13:00.777807" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/update/${id}</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a PUT request.</doc>
<status status="PASS" start="2025-06-16T19:13:00.765665" elapsed="0.012291"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:00.778219" elapsed="0.000469"/>
</return>
<msg time="2025-06-16T19:13:00.778959" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<var>${response}</var>
<arg>id=${product_id}</arg>
<status status="PASS" start="2025-06-16T19:13:00.757827" elapsed="0.021281"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.780292" level="INFO">${status_code} = 500</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.779339" elapsed="0.001132"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.781262" level="INFO">${status_code} = 500</msg>
<msg time="2025-06-16T19:13:00.781509" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:00.780798" elapsed="0.000836"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.756703" elapsed="0.025064"/>
</branch>
<branch type="ELSE">
<kw name="Fail" owner="BuiltIn">
<arg>Não foi possível criar o produto para atualização</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.782084" elapsed="0.000150"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:00.781837" elapsed="0.000509"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:00.756684" elapsed="0.025724"/>
</if>
<status status="PASS" start="2025-06-16T19:13:00.717236" elapsed="0.065262"/>
</kw>
<kw name="ENTÃO o sistema deve atualizar os dados do produto no banco de dados e retornar sucesso" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.784182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-16T19:13:00.784385" level="FAIL">500 != 200</msg>
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-16T19:13:00.783647" elapsed="0.000949">500 != 200</status>
</kw>
<status status="FAIL" start="2025-06-16T19:13:00.783039" elapsed="0.001782">500 != 200</status>
</kw>
<status status="FAIL" start="2025-06-16T19:13:00.611878" elapsed="0.173474">500 != 200</status>
</test>
<test id="s1-s1-s1-s1-s1-t5" name="NEGATIVE - Atualizar produto com dados inválidos" line="35">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.791026" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:00.790488" elapsed="0.000778"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.791931" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0d186d0&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:00.791473" elapsed="0.000841"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.891987" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:00.892239" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE"}
 
 </msg>
<msg time="2025-06-16T19:13:00.892444" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:00.792508" elapsed="0.100030"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.893479" elapsed="0.000151"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.893781" elapsed="0.000144"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.894073" elapsed="0.000111"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.894328" elapsed="0.000088"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.894591" elapsed="0.000125"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:00.892856" elapsed="0.001935"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:00.892762" elapsed="0.002067"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.895530" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:00.894910" elapsed="0.000811"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.789574" elapsed="0.106264"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.788542" elapsed="0.107377"/>
</kw>
<kw name="QUANDO ele faz a requisição de atualizar o produto com dados inválidos" owner="productsSteps">
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Name" owner="FakerLibrary">
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:13:00.897548" elapsed="0.000216"/>
</kw>
<msg time="2025-06-16T19:13:00.897890" level="INFO">${name} = Fernando da Rosa</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.897229" elapsed="0.000802"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:00.899027" elapsed="0.000358"/>
</kw>
<msg time="2025-06-16T19:13:00.899565" level="INFO">${description} = Magni est libero. Doloremque earum laborum. Assumenda nihil libero inventore a. Tempore recusandae quae adipisci.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.898667" elapsed="0.001036"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:00.900158" elapsed="0.000395"/>
</kw>
<msg time="2025-06-16T19:13:00.900682" level="INFO">${price} = 525.79</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.899863" elapsed="0.000928"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:00.901389" elapsed="0.002900"/>
</kw>
<msg time="2025-06-16T19:13:00.904706" level="INFO">${quantity} = 833</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.900978" elapsed="0.003990"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:00.906229" elapsed="0.000341"/>
</kw>
<msg time="2025-06-16T19:13:00.906837" level="INFO">${status} = False</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.905593" elapsed="0.001498"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.907670" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.907337" elapsed="0.000443"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.908297" level="INFO">${body} = {'name': 'Fernando da Rosa', 'description': 'Magni est libero. Doloremque earum laborum. Assumenda nihil libero inventore a. Tempore recusandae quae adipisci.', 'price': 525.79, 'quantity': 833, 'stat...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.907917" elapsed="0.000473"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.932538" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE', 'Content-Length': '211'} 
 body=b'{"name": "Fernando da Rosa", "description": "Magni est libero. Doloremque earum laborum. Assumenda nihil libero inventore a. Tempore recusandae quae adipisci.", "price": 525.79, "quantity": 833, "status": false}' 
 </msg>
<msg time="2025-06-16T19:13:00.932788" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 40,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:00.932999" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:13:00.908534" elapsed="0.024553"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.934113" level="INFO">Response: {'id': 40, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:00.933323" elapsed="0.000921"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:00.934352" elapsed="0.000100"/>
</return>
<msg time="2025-06-16T19:13:00.934599" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:13:00.896847" elapsed="0.037854"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 201">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.935726" level="INFO">${product_id} = 40</msg>
<var>${product_id}</var>
<arg>${response.json()['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.935252" elapsed="0.000564"/>
</kw>
<kw name="Atualizar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.936812" elapsed="0.000193"/>
</kw>
<msg time="2025-06-16T19:13:00.937114" level="INFO">${name} = </msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.936529" elapsed="0.000674"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${description}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.937639" elapsed="0.000182"/>
</kw>
<msg time="2025-06-16T19:13:00.937924" level="INFO">${description} = Descrição Inválida</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.937370" elapsed="0.000640"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${price}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.939051" elapsed="0.000216"/>
</kw>
<msg time="2025-06-16T19:13:00.939399" level="INFO">${price} = invalid</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.938168" elapsed="0.001323"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${quantity}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.939948" elapsed="0.000189"/>
</kw>
<msg time="2025-06-16T19:13:00.940244" level="INFO">${quantity} = -10</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.939678" elapsed="0.000668"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${status}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.940787" elapsed="0.000274"/>
</kw>
<msg time="2025-06-16T19:13:00.941244" level="INFO">${status} = False</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:00.940501" elapsed="0.000905"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.941957" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.941604" elapsed="0.000460"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.942714" level="INFO">${body} = {'name': '', 'description': 'Descrição Inválida', 'price': 'invalid', 'quantity': '-10', 'status': False}</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:00.942242" elapsed="0.000608"/>
</kw>
<kw name="PUT" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.951647" level="INFO">PUT Request : url=http://172.23.208.1/products/update/40 
 path_url=/products/update/40 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgwfQ.JuAqUlo69B5DqkNonsPhg45eJgznJWkVTEi74IxK6XE', 'Content-Length': '120'} 
 body=b'{"name": "", "description": "Descri\\u00e7\\u00e3o Inv\\u00e1lida", "price": "invalid", "quantity": "-10", "status": false}' 
 </msg>
<msg time="2025-06-16T19:13:00.951891" level="INFO">PUT Response : url=http://172.23.208.1/products/update/40 
 status=400, reason=BAD REQUEST 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '34', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "msg": "Invalid data types"
}
 
 </msg>
<msg time="2025-06-16T19:13:00.952099" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/update/${id}</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a PUT request.</doc>
<status status="PASS" start="2025-06-16T19:13:00.943232" elapsed="0.008956"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:00.952342" elapsed="0.000380"/>
</return>
<msg time="2025-06-16T19:13:00.953174" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>id=${product_id}</arg>
<arg>name=</arg>
<arg>description=Descrição Inválida</arg>
<arg>price=invalid</arg>
<arg>quantity=-10</arg>
<arg>status=${False}</arg>
<status status="PASS" start="2025-06-16T19:13:00.936024" elapsed="0.017338"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.954450" level="INFO">${status_code} = 400</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:00.953715" elapsed="0.000848"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.955091" level="INFO">${status_code} = 400</msg>
<msg time="2025-06-16T19:13:00.955273" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:00.954780" elapsed="0.000586"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.934827" elapsed="0.020643"/>
</branch>
<branch type="ELSE">
<kw name="Fail" owner="BuiltIn">
<arg>Não foi possível criar o produto para atualização</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:00.955760" elapsed="0.000116"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:00.955514" elapsed="0.000501"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:00.934805" elapsed="0.021264"/>
</if>
<status status="PASS" start="2025-06-16T19:13:00.896264" elapsed="0.059864"/>
</kw>
<kw name="ENTÃO o sistema deve retornar erro de dados inválidos" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.957859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:13:00.957643" elapsed="0.000367"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.957316" elapsed="0.000797"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.786936" elapsed="0.171544"/>
</test>
<test id="s1-s1-s1-s1-s1-t6" name="NEGATIVE - Atualizar produto com dados repetidos" line="41">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:00.961688" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:00.961374" elapsed="0.000511"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:00.962638" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0d29120&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:00.962158" elapsed="0.000897"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.064584" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.064856" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk"}
 
 </msg>
<msg time="2025-06-16T19:13:01.065081" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:00.963854" elapsed="0.101340"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.065904" elapsed="0.000160"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.066241" elapsed="0.000092"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.066467" elapsed="0.000081"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.066663" elapsed="0.000084"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.066859" elapsed="0.000078"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.065396" elapsed="0.001627"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.065365" elapsed="0.001699"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.067699" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:01.067141" elapsed="0.000675"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.961021" elapsed="0.106901"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:00.960453" elapsed="0.107583"/>
</kw>
<kw name="QUANDO ele faz a requisição de atualizar o produto com dados repetidos" owner="productsSteps">
<kw name="Name" owner="FakerLibrary">
<msg time="2025-06-16T19:13:01.068867" level="INFO">${fake_name} = Cauã Cardoso</msg>
<var>${fake_name}</var>
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:13:01.068642" elapsed="0.000339"/>
</kw>
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.070086" elapsed="0.000194"/>
</kw>
<msg time="2025-06-16T19:13:01.070382" level="INFO">${name} = Cauã Cardoso</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.069754" elapsed="0.000713"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:01.070870" elapsed="0.000244"/>
</kw>
<msg time="2025-06-16T19:13:01.071212" level="INFO">${description} = Natus ullam laboriosam. Minus omnis necessitatibus fugiat optio. Unde in veritatis ab quia voluptates.
Odio sapiente quo cum. Laboriosam tenetur officia vel voluptatibus.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.070609" elapsed="0.000685"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:01.071704" elapsed="0.000318"/>
</kw>
<msg time="2025-06-16T19:13:01.072133" level="INFO">${price} = 154.74</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.071446" elapsed="0.000768"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:01.072611" elapsed="0.000230"/>
</kw>
<msg time="2025-06-16T19:13:01.072975" level="INFO">${quantity} = 918</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.072371" elapsed="0.000702"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:01.073457" elapsed="0.000180"/>
</kw>
<msg time="2025-06-16T19:13:01.073739" level="INFO">${status} = False</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.073215" elapsed="0.000636"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.074298" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.074007" elapsed="0.000373"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.074994" level="INFO">${body} = {'name': 'Cauã Cardoso', 'description': 'Natus ullam laboriosam. Minus omnis necessitatibus fugiat optio. Unde in veritatis ab quia voluptates.\nOdio sapiente quo cum. Laboriosam tenetur officia vel v...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.074516" elapsed="0.000584"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.093172" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk', 'Content-Length': '270'} 
 body=b'{"name": "Cau\\u00e3 Cardoso", "description": "Natus ullam laboriosam. Minus omnis necessitatibus fugiat optio. Unde in veritatis ab quia voluptates.\\nOdio sapiente quo cum. Laboriosam tenetur officia vel voluptatibus.", "price": 154.74, "quantity": 918, "status": false}' 
 </msg>
<msg time="2025-06-16T19:13:01.093488" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 41,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:01.093744" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.075248" elapsed="0.018591"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.094950" level="INFO">Response: {'id': 41, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:01.094110" elapsed="0.000968"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.095188" elapsed="0.000116"/>
</return>
<msg time="2025-06-16T19:13:01.095465" level="INFO">${response1} = &lt;Response [201]&gt;</msg>
<var>${response1}</var>
<arg>name=${fake_name}</arg>
<status status="PASS" start="2025-06-16T19:13:01.069175" elapsed="0.026415"/>
</kw>
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Name" owner="FakerLibrary">
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:13:01.096740" elapsed="0.000324"/>
</kw>
<msg time="2025-06-16T19:13:01.097246" level="INFO">${name} = Maria Alice Rocha</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.096252" elapsed="0.001123"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:01.097867" elapsed="0.000260"/>
</kw>
<msg time="2025-06-16T19:13:01.098278" level="INFO">${description} = Officia doloremque dignissimos cum dolorem officiis consequatur sint.
Nesciunt animi aliquid similique eos deserunt rerum.
Nisi aperiam magnam. At soluta nesciunt accusamus autem beatae.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.097546" elapsed="0.000836"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:01.098810" elapsed="0.000294"/>
</kw>
<msg time="2025-06-16T19:13:01.099239" level="INFO">${price} = 820.66</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.098533" elapsed="0.000807"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:01.099781" elapsed="0.000249"/>
</kw>
<msg time="2025-06-16T19:13:01.100146" level="INFO">${quantity} = 139</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.099502" elapsed="0.000750"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:01.100673" elapsed="0.000169"/>
</kw>
<msg time="2025-06-16T19:13:01.100947" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.100418" elapsed="0.000614"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.101491" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.101174" elapsed="0.000406"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.104614" level="INFO">${body} = {'name': 'Maria Alice Rocha', 'description': 'Officia doloremque dignissimos cum dolorem officiis consequatur sint.\nNesciunt animi aliquid similique eos deserunt rerum.\nNisi aperiam magnam. At solut...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.101737" elapsed="0.003041"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.120088" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk', 'Content-Length': '286'} 
 body=b'{"name": "Maria Alice Rocha", "description": "Officia doloremque dignissimos cum dolorem officiis consequatur sint.\\nNesciunt animi aliquid similique eos deserunt rerum.\\nNisi aperiam magnam. At soluta nesciunt accusamus autem beatae.", "price": 820.66, "quantity": 139, "status": true}' 
 </msg>
<msg time="2025-06-16T19:13:01.120424" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 42,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:01.120696" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.105007" elapsed="0.015784"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.121832" level="INFO">Response: {'id': 42, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:01.121044" elapsed="0.000926"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.122095" elapsed="0.000100"/>
</return>
<msg time="2025-06-16T19:13:01.122337" level="INFO">${response2} = &lt;Response [201]&gt;</msg>
<var>${response2}</var>
<status status="PASS" start="2025-06-16T19:13:01.095842" elapsed="0.026585"/>
</kw>
<if>
<branch type="IF" condition="${response1.status_code} == 201 and ${response2.status_code} == 201">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.123694" level="INFO">${product_id} = 42</msg>
<var>${product_id}</var>
<arg>${response2.json()['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.123190" elapsed="0.000606"/>
</kw>
<kw name="Atualizar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.124771" elapsed="0.000186"/>
</kw>
<msg time="2025-06-16T19:13:01.125063" level="INFO">${name} = Cauã Cardoso</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.124453" elapsed="0.000697"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:01.125574" elapsed="0.000366"/>
</kw>
<msg time="2025-06-16T19:13:01.126113" level="INFO">${description} = Itaque voluptatibus quas deleniti ex explicabo. Cum omnis nam dicta molestias debitis repellat. Necessitatibus voluptatibus ducimus mollitia deserunt nostrum.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.125301" elapsed="0.000951"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:01.126785" elapsed="0.000311"/>
</kw>
<msg time="2025-06-16T19:13:01.127226" level="INFO">${price} = 361.84</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.126473" elapsed="0.000847"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:01.127792" elapsed="0.000241"/>
</kw>
<msg time="2025-06-16T19:13:01.128146" level="INFO">${quantity} = 182</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.127475" elapsed="0.000768"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:01.128693" elapsed="0.000184"/>
</kw>
<msg time="2025-06-16T19:13:01.128986" level="INFO">${status} = False</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.128397" elapsed="0.000674"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.129504" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.129214" elapsed="0.001113"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.130922" level="INFO">${body} = {'name': 'Cauã Cardoso', 'description': 'Itaque voluptatibus quas deleniti ex explicabo. Cum omnis nam dicta molestias debitis repellat. Necessitatibus voluptatibus ducimus mollitia deserunt nostrum.'...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.130521" elapsed="0.000504"/>
</kw>
<kw name="PUT" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.148596" level="INFO">PUT Request : url=http://172.23.208.1/products/update/42 
 path_url=/products/update/42 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk', 'Content-Length': '257'} 
 body=b'{"name": "Cau\\u00e3 Cardoso", "description": "Itaque voluptatibus quas deleniti ex explicabo. Cum omnis nam dicta molestias debitis repellat. Necessitatibus voluptatibus ducimus mollitia deserunt nostrum.", "price": 361.84, "quantity": 182, "status": false}' 
 </msg>
<msg time="2025-06-16T19:13:01.149386" level="INFO">PUT Response : url=http://172.23.208.1/products/update/42 
 status=500, reason=INTERNAL SERVER ERROR 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '13560', 'Connection': 'keep-alive'} 
 body=&lt;!doctype html&gt;
&lt;html lang=en&gt;
  &lt;head&gt;
    &lt;title&gt;TypeError: The view function for &amp;#39;products.update&amp;#39; did not return a valid response. The function either returned None or ended without a return statement.
 // Werkzeug Debugger&lt;/title&gt;
    &lt;link rel="stylesheet" href="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=style.css"&gt;
    &lt;link rel="shortcut icon"
        href="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=console.png"&gt;
    &lt;script src="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=debugger.js"&gt;&lt;/script&gt;
    &lt;script&gt;
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "nzYGqgqTzsZzpySqpUpH";
    &lt;/script&gt;
  &lt;/head&gt;
  &lt;body style="background-color: #fff"&gt;
    &lt;div class="debugger"&gt;
&lt;h1&gt;TypeError&lt;/h1&gt;
&lt;div class="detail"&gt;
  &lt;p class="errormsg"&gt;TypeError: The view function for &amp;#39;products.update&amp;#39; did not return a valid response. The function either returned None or ended without a return statement.
&lt;/p&gt;
&lt;/div&gt;
&lt;h2 class="traceback"&gt;Traceback &lt;em&gt;(most recent call last)&lt;/em&gt;&lt;/h2&gt;
&lt;div class="traceback"&gt;
  &lt;h3&gt;&lt;/h3&gt;
  &lt;ul&gt;&lt;li&gt;&lt;div class="frame" id="frame-139871973254176"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;1536&lt;/em&gt;,
      in &lt;code class="function"&gt;__call__&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;) -&amp;gt; cabc.Iterable[bytes]:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;The WSGI server calls the Flask application object as the&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;WSGI application. This calls :meth:`wsgi_app`, which can be&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;wrapped to apply middleware.&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return self.wsgi_app(environ, start_response)&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973253840"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;1514&lt;/em&gt;,
      in &lt;code class="function"&gt;wsgi_app&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;try:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;ctx.push()&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.full_dispatch_request()&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = e&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.handle_exception(e)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except:  # noqa: B001&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = sys.exc_info()[1]&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;raise&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;return response(environ, start_response)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;finally:&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973253952"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask_cors/extension.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;176&lt;/em&gt;,
      in &lt;code class="function"&gt;wrapped_function&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;# These error handlers will still respect the behavior of the route&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;if options.get(&amp;#34;intercept_exceptions&amp;#34;, True):&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;def _after_request_decorator(f):&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;def wrapped_function(*args, **kwargs):&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;return cors_after_request(app.make_response(f(*args, **kwargs)))&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;return wrapped_function&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;if hasattr(app, &amp;#34;handle_exception&amp;#34;):&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;app.handle_exception = _after_request_decorator(app.handle_exception)&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973253728"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;1511&lt;/em&gt;,
      in &lt;code class="function"&gt;wsgi_app&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;ctx = self.request_context(environ)&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;error: BaseException | None = None&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;try:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;try:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;ctx.push()&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.full_dispatch_request()&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = e&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.handle_exception(e)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except:  # noqa: B001&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = sys.exc_info()[1]&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973250480"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;920&lt;/em&gt;,
      in &lt;code class="function"&gt;full_dispatch_request&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;rv = self.preprocess_request()&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;if rv is None:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;rv = self.dispatch_request()&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;except Exception as e:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;rv = self.handle_user_exception(e)&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return self.finalize_request(rv)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;def finalize_request(&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;self,&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;rv: ft.ResponseReturnValue | HTTPException,&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;from_error_handler: bool = False,&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973254288"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;939&lt;/em&gt;,
      in &lt;code class="function"&gt;finalize_request&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;with the `from_error_handler` flag.  If enabled, failures in&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;response processing will be logged and otherwise ignored.&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;:internal:&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;response = self.make_response(rv)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;try:&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;response = self.process_response(response)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;request_finished.send(&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;self, _async_wrapper=self.ensure_sync, response=response&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;li&gt;&lt;div class="frame" id="frame-139871973253616"&gt;
  &lt;h4&gt;File &lt;cite class="filename"&gt;"/usr/local/lib/python3.10/dist-packages/flask/app.py"&lt;/cite&gt;,
      line &lt;em class="line"&gt;1212&lt;/em&gt;,
      in &lt;code class="function"&gt;make_response&lt;/code&gt;&lt;/h4&gt;
  &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;&amp;#34; (body, status), or (body, headers).&amp;#34;&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;)&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;# the body must not be None&lt;/pre&gt;
&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;if rv is None:&lt;/pre&gt;
&lt;pre class="line current"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;raise TypeError(&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;f&amp;#34;The view function for {request.endpoint!r} did not&amp;#34;&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;&amp;#34; return a valid response. The function either returned&amp;#34;&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;&amp;#34; None or ended without a return statement.&amp;#34;&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;)&lt;/pre&gt;
&lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/ul&gt;
  &lt;blockquote&gt;TypeError: The view function for &amp;#39;products.update&amp;#39; did not return a valid response. The function either returned None or ended without a return statement.
&lt;/blockquote&gt;
&lt;/div&gt;

... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-06-16T19:13:01.150300" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/update/${id}</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a PUT request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.131178" elapsed="0.019242"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.150595" elapsed="0.000133"/>
</return>
<msg time="2025-06-16T19:13:01.150919" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<var>${response}</var>
<arg>id=${product_id}</arg>
<arg>name=${fake_name}</arg>
<status status="PASS" start="2025-06-16T19:13:01.124007" elapsed="0.027014"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.151947" level="INFO">${status_code} = 500</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.151266" elapsed="0.000828"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.152597" level="INFO">${status_code} = 500</msg>
<msg time="2025-06-16T19:13:01.152749" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:01.152299" elapsed="0.000551"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.122549" elapsed="0.030414"/>
</branch>
<branch type="ELSE">
<kw name="Fail" owner="BuiltIn">
<arg>Não foi possível criar os produtos para atualização</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.153216" elapsed="0.000119"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.153007" elapsed="0.000416"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.122527" elapsed="0.030927"/>
</if>
<status status="PASS" start="2025-06-16T19:13:01.068360" elapsed="0.085147"/>
</kw>
<kw name="ENTÃO o sistema deve retornar erro de dados repetidos" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.154762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2025-06-16T19:13:01.154969" level="FAIL">500 != 409</msg>
<arg>${status_code}</arg>
<arg>409</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="FAIL" start="2025-06-16T19:13:01.154483" elapsed="0.000682">500 != 409</status>
</kw>
<status status="FAIL" start="2025-06-16T19:13:01.154119" elapsed="0.001179">500 != 409</status>
</kw>
<status status="FAIL" start="2025-06-16T19:13:00.959294" elapsed="0.196419">500 != 409</status>
</test>
<test id="s1-s1-s1-s1-s1-t7" name="POSITIVE - Buscar produto com sucesso" line="47">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.159856" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:01.159372" elapsed="0.000668"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.160771" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0cd2590&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:01.160291" elapsed="0.000863"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.262054" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.262302" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk"}
 
 </msg>
<msg time="2025-06-16T19:13:01.262509" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:01.161396" elapsed="0.101200"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.263389" elapsed="0.000109"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.263722" elapsed="0.000093"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.263945" elapsed="0.000092"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.264165" elapsed="0.000084"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.264369" elapsed="0.000076"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.262790" elapsed="0.001723"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.262759" elapsed="0.001789"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.265203" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:01.264622" elapsed="0.000728"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.158881" elapsed="0.106572"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.158344" elapsed="0.107180"/>
</kw>
<kw name="QUANDO ele faz a requisição de buscar um produto existente no sistema" owner="productsSteps">
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Name" owner="FakerLibrary">
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:13:01.266968" elapsed="0.000226"/>
</kw>
<msg time="2025-06-16T19:13:01.267295" level="INFO">${name} = Bernardo Mendonça</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.266536" elapsed="0.000848"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:01.268555" elapsed="0.000226"/>
</kw>
<msg time="2025-06-16T19:13:01.268926" level="INFO">${description} = Excepturi sapiente quaerat ab dolore. Aliquam qui et quas modi. Quisquam consequatur dicta laudantium facilis recusandae esse.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.268277" elapsed="0.000762"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:01.269483" elapsed="0.000310"/>
</kw>
<msg time="2025-06-16T19:13:01.269940" level="INFO">${price} = 96.59</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.269193" elapsed="0.000862"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:01.270532" elapsed="0.000289"/>
</kw>
<msg time="2025-06-16T19:13:01.270951" level="INFO">${quantity} = 436</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.270213" elapsed="0.000860"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:01.271589" elapsed="0.000216"/>
</kw>
<msg time="2025-06-16T19:13:01.271915" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.271239" elapsed="0.000772"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.272516" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.272176" elapsed="0.000460"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.273263" level="INFO">${body} = {'name': 'Bernardo Mendonça', 'description': 'Excepturi sapiente quaerat ab dolore. Aliquam qui et quas modi. Quisquam consequatur dicta laudantium facilis recusandae esse.', 'price': 96.59, 'quantity...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.272818" elapsed="0.000551"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.288069" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk', 'Content-Length': '228'} 
 body=b'{"name": "Bernardo Mendon\\u00e7a", "description": "Excepturi sapiente quaerat ab dolore. Aliquam qui et quas modi. Quisquam consequatur dicta laudantium facilis recusandae esse.", "price": 96.59, "quantity": 436, "status": true}' 
 </msg>
<msg time="2025-06-16T19:13:01.288326" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 43,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:01.288548" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.273528" elapsed="0.015109"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.289683" level="INFO">Response: {'id': 43, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:01.288876" elapsed="0.000936"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.289919" elapsed="0.000713"/>
</return>
<msg time="2025-06-16T19:13:01.290826" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:13:01.266215" elapsed="0.024738"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 201">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.292069" level="INFO">${product_id} = 43</msg>
<var>${product_id}</var>
<arg>${response.json()['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.291580" elapsed="0.000620"/>
</kw>
<kw name="Buscar produto com id ${product_id}" owner="products" source_name="Buscar produto com id ${id}">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.293527" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.293023" elapsed="0.000709"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.302330" level="INFO">GET Request : url=http://172.23.208.1/products/fetch/43 
 path_url=/products/fetch/43 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk'} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.302584" level="INFO">GET Response : url=http://172.23.208.1/products/fetch/43 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '252', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "description": "Excepturi sapiente quaerat ab dolore. Aliquam qui et quas modi. Quisquam consequatur dicta laudantium facilis recusandae esse.",
  "id": 43,
  "name": "Bernardo Mendon\u00e7a",
  "price": "96.59",
  "quantity": 436,
  "status": 1
}
 
 </msg>
<msg time="2025-06-16T19:13:01.303286" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/fetch/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.294000" elapsed="0.009413"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.303584" elapsed="0.000131"/>
</return>
<msg time="2025-06-16T19:13:01.303878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:13:01.292525" elapsed="0.011446"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.304701" level="INFO">${status_code} = 200</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.304192" elapsed="0.000603"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.305306" level="INFO">${status_code} = 200</msg>
<msg time="2025-06-16T19:13:01.305470" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:01.304974" elapsed="0.000573"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.291085" elapsed="0.014563"/>
</branch>
<branch type="ELSE">
<kw name="Fail" owner="BuiltIn">
<arg>Não foi possível criar o produto para busca</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.305871" elapsed="0.000121"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.305692" elapsed="0.000376"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.291062" elapsed="0.015055"/>
</if>
<status status="PASS" start="2025-06-16T19:13:01.265830" elapsed="0.040343"/>
</kw>
<kw name="ENTÃO o sistema deve retornar os dados do produto com sucesso" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.307851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:13:01.307319" elapsed="0.000679"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.306739" elapsed="0.001360"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.157317" elapsed="0.151381"/>
</test>
<test id="s1-s1-s1-s1-s1-t8" name="POSITIVE - Buscar todos produtos" line="52">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.312289" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:01.311900" elapsed="0.000532"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.312920" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0e2da80&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:01.312610" elapsed="0.000619"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.406065" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.406449" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk"}
 
 </msg>
<msg time="2025-06-16T19:13:01.406790" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:01.313408" elapsed="0.093512"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.408071" elapsed="0.000174"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.408552" elapsed="0.000155"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.408925" elapsed="0.000099"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.409155" elapsed="0.000086"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.409413" elapsed="0.000099"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.407195" elapsed="0.002437"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.407150" elapsed="0.002558"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.410520" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:01.409819" elapsed="0.000873"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.311465" elapsed="0.099345"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.310926" elapsed="0.099963"/>
</kw>
<kw name="QUANDO ele faz a requisição de buscar todos os produtos no sistema" owner="productsSteps">
<kw name="Buscar catálogo de produtos" owner="products">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.412226" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.411922" elapsed="0.000888"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.426888" level="INFO">GET Request : url=http://172.23.208.1/products/fetch 
 path_url=/products/fetch 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk'} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.427189" level="INFO">GET Response : url=http://172.23.208.1/products/fetch 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '10419', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body=[
  {
    "description": "Minima facere rem magnam culpa.\nNon quis enim laborum optio itaque beatae. Voluptates ipsum nobis sapiente itaque esse.",
    "id": 1,
    "name": "Ravi Siqueira",
    "price": "861.53",
    "quantity": 421,
    "status": 0
  },
  {
    "description": "Asperiores tempore officia repellendus. Ut non autem consectetur. Velit alias magni nam.\nVero esse nisi amet soluta. Qui laborum unde laudantium.",
    "id": 2,
    "name": "Calebe Pacheco",
    "price": "730.80",
    "quantity": 331,
    "status": 1
  },
  {
    "description": "Quo temporibus corrupti neque minus reiciendis quaerat provident. Mollitia quis voluptate quis pariatur vero est. Voluptatem aut consequuntur veritatis commodi.",
    "id": 4,
    "name": "Vin\u00edcius Rodrigues",
    "price": "511.45",
    "quantity": 26,
    "status": 1
  },
  {
    "description": "Culpa perspiciatis facere optio occaecati enim. Voluptatibus ullam eveniet beatae repudiandae odio. Tenetur sunt voluptate esse assumenda iure amet.",
    "id": 5,
    "name": "Valentina Machado",
    "price": "350.73",
    "quantity": 48,
    "status": 1
  },
  {
    "description": "Sapiente perspiciatis delectus laboriosam. Rerum perspiciatis totam atque quod impedit. At nobis tempore vel.",
    "id": 6,
    "name": "Carlos Eduardo Azevedo",
    "price": "526.56",
    "quantity": 13,
    "status": 0
  },
  {
    "description": "Fugit sit ea repellat ea sapiente. Voluptates nobis mollitia quod.\nReprehenderit architecto veritatis quis. Est odit voluptatem sit sed incidunt ullam. Nesciunt eos atque possimus repellat eveniet.",
    "id": 7,
    "name": "Davi Lucas Rezende",
    "price": "47.45",
    "quantity": 275,
    "status": 0
  },
  {
    "description": "Corporis aperiam iste laudantium a aspernatur. Fugit ab in veritatis numquam iusto officiis. Vero dolor sunt quaerat at id facilis.",
    "id": 8,
    "name": "Emanuella Martins",
    "price": "26.13",
    "quantity": 564,
    "status": 0
  },
  {
    "description": "Animi fugiat sit. Quam repellendus perspiciatis cupiditate perferendis placeat. Tenetur suscipit non libero accusamus eum. Similique inventore minima quaerat.",
    "id": 10,
    "name": "Maria Sophia Fonseca",
    "price": "472.20",
    "quantity": 430,
    "status": 0
  },
  {
    "description": "Quam rerum enim eaque consequatur vel inventore voluptas. Illum nostrum saepe quam veniam quia. Quos repellat ratione eaque nostrum.",
    "id": 11,
    "name": "Rebeca Castro",
    "price": "350.41",
    "quantity": 280,
    "status": 1
  },
  {
    "description": "Esse aperiam delectus pariatur. Qui vero ratione fugit velit maiores. Et mollitia commodi repellendus et nobis.",
    "id": 12,
    "name": "Olivia Castro",
    "price": "978.74",
    "quantity": 348,
    "status": 0
  },
  {
    "description": "Asperiores nemo error architecto placeat. Tenetur assumenda iste asperiores provident voluptatibus. Tenetur temporibus velit assumenda.",
    "id": 13,
    "name": "Ot\u00e1vio Cirino",
    "price": "293.69",
    "quantity": 405,
    "status": 0
  },
  {
    "description": "Incidunt dolorem veritatis odio. Temporibus repellat sint optio dolores. Tenetur aperiam enim dolorem cupiditate et.",
    "id": 14,
    "name": "Lunna Barros",
    "price": "686.20",
    "quantity": 856,
    "status": 1
  },
  {
    "description": "Qui consequuntur doloribus velit. Neque vel molestiae impedit corrupti. Sit quidem est saepe hic a. Dolorem neque consequuntur ipsum reprehenderit vero non ipsam.",
    "id": 15,
    "name": "Miguel da Mata",
    "price": "106.14",
    "quantity": 761,
    "status": 0
  },
  {
    "description": "Blanditiis amet quam ratione rem rerum eligendi nam. Commodi sed architecto sint. Sit ab consequuntur amet molestias occaecati.",
    "id": 16,
    "name": "Ana Beatriz Abreu",
    "price": "330.50",
    "quantity": 895,
    "status": 0
  },
  {
    "description": "Molestias laudantium fugiat ex laboriosam ipsa vitae. Explicabo vero soluta facilis reprehenderit. Quas laboriosam aut adipisci.",
    "id": 17,
    "name": "Benicio Dias",
    "price": "85.20",
    "quantity": 889,
    "status": 0
  },
  {
    "description": "Ex non laborum quibusdam quisquam. Et praesentium quod veniam eligendi deleniti. Tempore recusandae autem officiis. Ipsa nesciunt placeat laudantium.",
    "id": 18,
    "name": "Alice da Concei\u00e7\u00e3o",
    "price": "896.41",
    "quantity": 287,
    "status": 1
  },
  {
    "description": "Molestias quisquam iusto illo dignissimos earum. Illo dolorem iste inventore.\nIpsa rem pariatur inventore vitae. Eum repudiandae dolore.",
    "id": 19,
    "name": "Juan Souza",
    "price": "842.84",
    "quantity": 538,
    "status": 1
  },
  {
    "description": "Vero quis magni suscipit.\nCumque eos repellendus. Nostrum voluptates quidem sequi qui. Officia at cum dignissimos.\nAperiam ad velit magnam impedit reprehenderit. Saepe culpa nihil assumenda.",
    "id": 20,
    "name": "Dr. Murilo Camargo",
    "price": "555.46",
    "quantity": 173,
    "status": 0
  },
  {
    "description": "Modi mollitia tempore a suscipit cum corporis. Voluptatibus quis similique numquam distinctio consequuntur exercitationem.",
    "id": 21,
    "name": "Lucca Souza",
    "price": "501.34",
    "quantity": 840,
    "status": 1
  },
  {
    "description": "Sed non illum libero consectetur quaerat. Nostrum error illo quibusdam.\nEos ab nulla doloremque incidunt. Iste quam odio cupiditate quaerat neque.",
    "id": 23,
    "name": "Gabriel da Rosa",
    "price": "507.94",
    "quantity": 750,
    "status": 1
  },
  {
    "description": "Incidunt nam veritatis eaque facilis delectus. Corporis odit nemo sapiente est soluta.",
    "id": 24,
    "name": "\u00cdsis Rezende",
    "price": "663.69",
    "quantity": 340,
    "status": 0
  },
  {
    "description": "Pariatur magnam in quae quidem beatae. Itaque adipisci distinctio similique ad magnam asperiores fugit.",
    "id": 25,
    "name": "Rafaela Mendon\u00e7a",
    "price": "689.23",
    "quantity": 715,
    "status": 1
  },
  {
    "description": "Temporibus necessitatibus optio itaque. Labore saepe consectetur aspernatur iure voluptate.",
    "id": 26,
    "name": "Srta. Brenda Machado",
    "price": "692.17",
    "quantity": 562,
    "status": 0
  },
  {
    "description": "Dolore suscipit ipsum dolores.\nCupiditate assumenda soluta autem. Iure necessitatibus omnis nam laboriosam vitae est. Provident ipsam possimus ad expedita quos.",
    "id": 27,
    "name": "Lara Vieira",
    "price": "827.85",
    "quantity": 701,
    "status": 0
  },
  {
    "description": "Consequatur nihil sunt quia. Molestiae error occaecati reprehenderit laboriosam sapiente quisquam. At dolor fugiat nihil.",
    "id": 29,
    "name": "Stephany Barbosa",
    "price": "964.36",
    "quantity": 57,
    "status": 0
  },
  {
    "description": "Deserunt aperiam laudantium provident aliquam unde.\nTotam rerum accusantium autem nostrum perspiciatis distinctio. Illo in modi voluptates. Fugit libero dolores voluptates. Itaque hic fugit commodi.",
    "id": 30,
    "name": "Jade Casa Grande",
    "price": "593.53",
    "quantity": 579,
    "status": 0
  },
  {
    "description": "Eum est magnam sapiente voluptatibus pariatur. Nobis distinctio consequatur perspiciatis quam. Voluptate repudiandae reiciendis neque a ut est facilis.",
    "id": 31,
    "name": "Rebeca das Neves",
    "price": "576.16",
    "quantity": 387,
    "status": 1
  },
  {
    "description": "Iure delectus ducimus porro consectetur nam illo. Enim error perferendis nisi atque accusamus exercitationem.",
    "id": 32,
    "name": "Felipe Sousa",
    "price": "473.46",
    "quantity": 274,
    "status": 0
  },
  {
    "description": "Laboriosam iusto sequi magnam corporis debitis at soluta. Sapiente doloribus ullam molestias consequuntur occaecati eius ab.",
    "id": 33,
    "name": "Luigi Cavalcante",
    "price": "440.69",
    "quantity": 278,
    "status": 0
  },
  {
    "description": "Eligendi veniam enim placeat cum. Voluptatem optio molestias nihil sed. Illo harum earum illum.\nHic occaecati ex. Fuga occaecati sit sed distinctio ullam rerum blanditiis.",
    "id": 34,
    "name": "Nina Cassiano",
    "price": "655.77",
    "quantity": 259,
    "status": 1
  },
  {
    "description": "Natus excepturi vero ipsum nam nam. Dolor hic rem. Provident culpa autem ex laborum quia.",
    "id": 35,
    "name": "Sra. La\u00eds Oliveira",
    "price": "342.68",
    "quantity": 617,
    "status": 0
  },
  {
    "description": "Illum magni fugiat voluptas neque repudiandae corporis. Illo quisquam facilis rerum.",
    "id": 36,
    "name": "Joaquim Dias",
    "price": "794.95",
    "quantity": 399,
    "status": 0
  },
  {
    "description": "Sit suscipit voluptatibus nam placeat excepturi. Quos officia distinctio debitis nam animi.\nAccusamus laboriosam distinctio maxime. Nulla doloribus provident aut molestiae cum velit.",
    "id": 37,
    "name": "Ana Liz Ferreira",
    "price": "627.31",
    "quantity": 499,
    "status": 1
  },
  {
    "description": "Velit quas velit nulla. Laudantium doloribus ex non expedita minima eos.",
    "id": 39,
    "name": "Dr. Matteo Cardoso",
    "price": "916.37",
    "quantity": 789,
    "status": 1
  },
  {
    "description": "Magni est libero. Doloremque earum laborum. Assumenda nihil libero inventore a. Tempore recusandae quae adipisci.",
    "id": 40,
    "name": "Fernando da Rosa",
    "price": "525.79",
    "quantity": 833,
    "status": 0
  },
  {
    "description": "Natus ullam laboriosam. Minus omnis necessitatibus fugiat optio. Unde in veritatis ab quia voluptates.\nOdio sapiente quo cum. Laboriosam tenetur officia vel voluptatibus.",
    "id": 41,
    "name": "Cau\u00e3 Cardoso",
    "price": "154.74",
    "quantity": 918,
    "status": 0
  },
  {
    "description": "Officia doloremque dignissimos cum dolorem officiis consequatur sint.\nNesciunt animi aliquid similique eos deserunt rerum.\nNisi aperiam magnam. At solut... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-06-16T19:13:01.428438" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/fetch</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.413058" elapsed="0.015564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.428935" elapsed="0.000234"/>
</return>
<msg time="2025-06-16T19:13:01.429386" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:13:01.411627" elapsed="0.017878"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.430317" level="INFO">${status_code} = 200</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.429730" elapsed="0.000701"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.430891" level="INFO">${status_code} = 200</msg>
<msg time="2025-06-16T19:13:01.431031" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:01.430620" elapsed="0.000498"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.411208" elapsed="0.020028"/>
</kw>
<kw name="ENTÃO o sistema deve retornar a lista de todos os produtos com sucesso" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.432776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:13:01.432369" elapsed="0.000670"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.431824" elapsed="0.001475"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.310301" elapsed="0.123698"/>
</test>
<test id="s1-s1-s1-s1-s1-t9" name="NEGATIVE - Buscar produto inexistente" line="58">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.438712" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:01.438299" elapsed="0.000618"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.439745" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0eb5150&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:01.439214" elapsed="0.000864"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.538620" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.538914" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk"}
 
 </msg>
<msg time="2025-06-16T19:13:01.539129" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:01.440361" elapsed="0.098855"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.540054" elapsed="0.000122"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.540324" elapsed="0.000090"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.540539" elapsed="0.000078"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.540732" elapsed="0.000080"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.541004" elapsed="0.000111"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.539405" elapsed="0.001775"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.539374" elapsed="0.001838"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.541780" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:01.541288" elapsed="0.000611"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.437723" elapsed="0.104279"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.436869" elapsed="0.105204"/>
</kw>
<kw name="QUANDO ele faz a requisição de buscar um produto inexistente no sistema" owner="productsSteps">
<kw name="Buscar produto com id 999999" owner="products" source_name="Buscar produto com id ${id}">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.543218" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.542949" elapsed="0.000354"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.563849" level="INFO">GET Request : url=http://172.23.208.1/products/fetch/999999 
 path_url=/products/fetch/999999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk'} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.564132" level="INFO">GET Response : url=http://172.23.208.1/products/fetch/999999 
 status=404, reason=NOT FOUND 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '33', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "msg": "Product not found"
}
 
 </msg>
<msg time="2025-06-16T19:13:01.564671" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/fetch/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.543429" elapsed="0.021369"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.564955" elapsed="0.000295"/>
</return>
<msg time="2025-06-16T19:13:01.565453" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:13:01.542637" elapsed="0.022948"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.566314" level="INFO">${status_code} = 404</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.565800" elapsed="0.000620"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.566899" level="INFO">${status_code} = 404</msg>
<msg time="2025-06-16T19:13:01.567039" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:01.566621" elapsed="0.000496"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.542308" elapsed="0.024926"/>
</kw>
<kw name="ENTÃO o sistema deve retornar erro de produto não encontrado" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.568446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${status_code}</arg>
<arg>404</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:13:01.568199" elapsed="0.000408"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.567832" elapsed="0.000884"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.435646" elapsed="0.133730"/>
</test>
<test id="s1-s1-s1-s1-s1-t10" name="POSITIVE - Deletar produto com sucesso" line="65">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.572124" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:01.571837" elapsed="0.000419"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.572748" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0d18070&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:01.572427" elapsed="0.000556"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.676698" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.676987" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk"}
 
 </msg>
<msg time="2025-06-16T19:13:01.677210" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:01.573131" elapsed="0.104181"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.678065" elapsed="0.000112"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.678316" elapsed="0.000086"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.678523" elapsed="0.000082"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.678720" elapsed="0.000093"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.678962" elapsed="0.000080"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.677531" elapsed="0.001579"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.677498" elapsed="0.001650"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.679790" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:01.679230" elapsed="0.000677"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.571455" elapsed="0.108556"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.570956" elapsed="0.109127"/>
</kw>
<kw name="QUANDO ele faz a requisição de deletar um produto existente no sistema" owner="productsSteps">
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Name" owner="FakerLibrary">
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:13:01.681324" elapsed="0.000184"/>
</kw>
<msg time="2025-06-16T19:13:01.681608" level="INFO">${name} = Eloá Garcia</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.681069" elapsed="0.000625"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:01.682302" elapsed="0.000237"/>
</kw>
<msg time="2025-06-16T19:13:01.682641" level="INFO">${description} = Perspiciatis aliquam magni. Sit cum optio explicabo possimus. Odio cum commodi velit repellat. Maiores atque debitis at impedit minima ullam.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.681887" elapsed="0.001605"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:01.684045" elapsed="0.000264"/>
</kw>
<msg time="2025-06-16T19:13:01.684428" level="INFO">${price} = 591.69</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.683757" elapsed="0.000765"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:01.684972" elapsed="0.000244"/>
</kw>
<msg time="2025-06-16T19:13:01.685331" level="INFO">${quantity} = 424</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.684675" elapsed="0.000744"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:01.685939" elapsed="0.000215"/>
</kw>
<msg time="2025-06-16T19:13:01.686342" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.685599" elapsed="0.000902"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.687186" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.686775" elapsed="0.000519"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.688012" level="INFO">${body} = {'name': 'Eloá Garcia', 'description': 'Perspiciatis aliquam magni. Sit cum optio explicabo possimus. Odio cum commodi velit repellat. Maiores atque debitis at impedit minima ullam.', 'price': 591.69,...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.687455" elapsed="0.000680"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.704815" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk', 'Content-Length': '238'} 
 body=b'{"name": "Elo\\u00e1 Garcia", "description": "Perspiciatis aliquam magni. Sit cum optio explicabo possimus. Odio cum commodi velit repellat. Maiores atque debitis at impedit minima ullam.", "price": 591.69, "quantity": 424, "status": true}' 
 </msg>
<msg time="2025-06-16T19:13:01.705076" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 44,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:01.705325" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.688292" elapsed="0.017132"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.706438" level="INFO">Response: {'id': 44, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:01.705711" elapsed="0.000846"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.706691" elapsed="0.000128"/>
</return>
<msg time="2025-06-16T19:13:01.706963" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:13:01.680709" elapsed="0.026337"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 201">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.708046" level="INFO">${product_id} = 44</msg>
<var>${product_id}</var>
<arg>${response.json()['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.707555" elapsed="0.000573"/>
</kw>
<kw name="Deletar produto" owner="products">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.708938" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.708630" elapsed="0.000396"/>
</kw>
<kw name="DELETE" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.732679" level="INFO">DELETE Request : url=http://172.23.208.1/products/delete/44 
 path_url=/products/delete/44 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.732937" level="INFO">DELETE Response : url=http://172.23.208.1/products/delete/44 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '44', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "msg": "Success deleting the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:01.733145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/delete/${id}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.709160" elapsed="0.024090"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.733821" elapsed="0.000458"/>
</return>
<msg time="2025-06-16T19:13:01.734580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>id=${product_id}</arg>
<status status="PASS" start="2025-06-16T19:13:01.708298" elapsed="0.026417"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.735630" level="INFO">${status_code} = 200</msg>
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.734955" elapsed="0.000837"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.736381" level="INFO">${status_code} = 200</msg>
<msg time="2025-06-16T19:13:01.736544" level="INFO">${status_code} = None</msg>
<var>${status_code}</var>
<arg>${status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:01.735995" elapsed="0.000658"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.707159" elapsed="0.029617"/>
</branch>
<branch type="ELSE">
<kw name="Fail" owner="BuiltIn">
<arg>Não foi possível criar o produto para deleção</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.737032" elapsed="0.000133"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.736825" elapsed="0.000421"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.707139" elapsed="0.030142"/>
</if>
<status status="PASS" start="2025-06-16T19:13:01.680369" elapsed="0.056985"/>
</kw>
<kw name="ENTÃO o sistema deve deletar o produto do banco de dados e retornar sucesso" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.738522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:13:01.738259" elapsed="0.000587"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.737902" elapsed="0.001052"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.570108" elapsed="0.169268"/>
</test>
<test id="s1-s1-s1-s1-s1-t11" name="POSITIVE - Verificar se produto existe" line="71">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.742259" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:01.741904" elapsed="0.000545"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.742973" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0eb5720&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:01.742638" elapsed="0.000637"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.842364" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.842669" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk"}
 
 </msg>
<msg time="2025-06-16T19:13:01.842878" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:01.743509" elapsed="0.099467"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.843784" elapsed="0.000108"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.844031" elapsed="0.000087"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.844238" elapsed="0.000080"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.844431" elapsed="0.000082"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.844655" elapsed="0.000086"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.843194" elapsed="0.001614"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.843159" elapsed="0.001681"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.845413" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:01.844912" elapsed="0.000619"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.741576" elapsed="0.104085"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.741118" elapsed="0.104614"/>
</kw>
<kw name="QUANDO ele faz a requisição de verificar se um produto existe com ID existente" owner="productsSteps">
<kw name="Criar produto" owner="products">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Name" owner="FakerLibrary">
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-06-16T19:13:01.846993" elapsed="0.000193"/>
</kw>
<msg time="2025-06-16T19:13:01.847286" level="INFO">${name} = Sabrina Gonçalves</msg>
<var>${name}</var>
<arg>'${name}' == 'None'</arg>
<arg>FakerLibrary.Name</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${name}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.846728" elapsed="0.000643"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Text" owner="FakerLibrary">
<doc>Generate a text string.</doc>
<status status="PASS" start="2025-06-16T19:13:01.847797" elapsed="0.000338"/>
</kw>
<msg time="2025-06-16T19:13:01.848330" level="INFO">${description} = Repudiandae vero animi veniam placeat repudiandae incidunt. Et dicta distinctio eum error rem at voluptatum. Ratione laborum quis veniam expedita.</msg>
<var>${description}</var>
<arg>'${description}' == 'None'</arg>
<arg>FakerLibrary.Text</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${description}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.847503" elapsed="0.000917"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyfloat" owner="FakerLibrary">
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<status status="PASS" start="2025-06-16T19:13:01.848919" elapsed="0.000267"/>
</kw>
<msg time="2025-06-16T19:13:01.849293" level="INFO">${price} = 121.58</msg>
<var>${price}</var>
<arg>'${price}' == 'None'</arg>
<arg>FakerLibrary.Pyfloat</arg>
<arg>min_value=1.0</arg>
<arg>max_value=1000.0</arg>
<arg>right_digits=2</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${price}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.848644" elapsed="0.000733"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pyint" owner="FakerLibrary">
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<status status="PASS" start="2025-06-16T19:13:01.849847" elapsed="0.000220"/>
</kw>
<msg time="2025-06-16T19:13:01.850176" level="INFO">${quantity} = 450</msg>
<var>${quantity}</var>
<arg>'${quantity}' == 'None'</arg>
<arg>FakerLibrary.Pyint</arg>
<arg>min_value=1</arg>
<arg>max_value=1000</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${quantity}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.849548" elapsed="0.000712"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pybool" owner="FakerLibrary">
<doc>Generates a random boolean, optionally biased towards `True` or `False`.</doc>
<status status="PASS" start="2025-06-16T19:13:01.850679" elapsed="0.000182"/>
</kw>
<msg time="2025-06-16T19:13:01.850967" level="INFO">${status} = True</msg>
<var>${status}</var>
<arg>'${status}' == 'None'</arg>
<arg>FakerLibrary.Pybool</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${status}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-06-16T19:13:01.850405" elapsed="0.000668"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.851622" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.851238" elapsed="0.000500"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.852272" level="INFO">${body} = {'name': 'Sabrina Gonçalves', 'description': 'Repudiandae vero animi veniam placeat repudiandae incidunt. Et dicta distinctio eum error rem at voluptatum. Ratione laborum quis veniam expedita.', 'pric...</msg>
<var>${body}</var>
<arg>name=${name}</arg>
<arg>description=${description}</arg>
<arg>price=${price}</arg>
<arg>quantity=${quantity}</arg>
<arg>status=${status}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.851891" elapsed="0.000478"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.878420" level="INFO">POST Request : url=http://172.23.208.1/products/create 
 path_url=/products/create 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk', 'Content-Length': '249'} 
 body=b'{"name": "Sabrina Gon\\u00e7alves", "description": "Repudiandae vero animi veniam placeat repudiandae incidunt. Et dicta distinctio eum error rem at voluptatum. Ratione laborum quis veniam expedita.", "price": 121.58, "quantity": 450, "status": true}' 
 </msg>
<msg time="2025-06-16T19:13:01.878714" level="INFO">POST Response : url=http://172.23.208.1/products/create 
 status=201, reason=CREATED 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '56', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "id": 45,
  "msg": "Success creating the product"
}
 
 </msg>
<msg time="2025-06-16T19:13:01.878965" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/create</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.852623" elapsed="0.026448"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.880773" level="INFO">Response: {'id': 45, 'msg': 'Success creating the product'} - Status Code: 201</msg>
<arg>Response: ${response.json()} - Status Code: ${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-06-16T19:13:01.879348" elapsed="0.001564"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.881018" elapsed="0.000319"/>
</return>
<msg time="2025-06-16T19:13:01.881506" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-06-16T19:13:01.846355" elapsed="0.035265"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 201">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.882870" level="INFO">${product_id} = 45</msg>
<var>${product_id}</var>
<arg>${response.json()['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-06-16T19:13:01.882260" elapsed="0.000740"/>
</kw>
<kw name="Verificar existencia de produto" owner="products">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.885336" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:01.884729" elapsed="0.000756"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.896489" level="INFO">GET Request : url=http://172.23.208.1/products/exists/45 
 path_url=/products/exists/45 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgxfQ.vcnuBDRoJ_h5QUIq32dD1G-Eb9AD2XH1qL9nWD40OOk'} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:01.896766" level="INFO">GET Response : url=http://172.23.208.1/products/exists/45 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:01 GMT', 'Content-Type': 'application/json', 'Content-Length': '65', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "product_name": "Sabrina Gon\u00e7alves",
  "status": true
}
 
 </msg>
<msg time="2025-06-16T19:13:01.897003" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/exists/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-06-16T19:13:01.885692" elapsed="0.011750"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:01.897683" elapsed="0.000181"/>
</return>
<msg time="2025-06-16T19:13:01.898069" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>id=${product_id}</arg>
<status status="PASS" start="2025-06-16T19:13:01.883309" elapsed="0.014862"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.898685" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg time="2025-06-16T19:13:01.898833" level="INFO">${response} = None</msg>
<var>${response}</var>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:01.898384" elapsed="0.000522"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.881758" elapsed="0.017253"/>
</branch>
<branch type="ELSE">
<kw name="Fail" owner="BuiltIn">
<arg>Não foi possível criar o produto para verificação</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:01.899246" elapsed="0.000093"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:01.899082" elapsed="0.000368"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:01.881731" elapsed="0.017778"/>
</if>
<status status="PASS" start="2025-06-16T19:13:01.846009" elapsed="0.053646"/>
</kw>
<kw name="ENTÃO o sistema deve retornar True e sucesso" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.901189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:13:01.900626" elapsed="0.000749"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.902004" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()['status']}</arg>
<arg>True</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-16T19:13:01.901528" elapsed="0.000617"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.900074" elapsed="0.002169"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.740441" elapsed="0.162855"/>
</test>
<test id="s1-s1-s1-s1-s1-t12" name="POSITIVE - Verificar se produto não existe" line="76">
<kw name="DADO que o usuário possui um token de autenticação válido" owner="authSteps">
<kw name="Login Usando Basic Auth E Obter Token" owner="auth">
<kw name="Create List" owner="BuiltIn">
<msg time="2025-06-16T19:13:01.905583" level="INFO">${auth} = ['AturM', 'Testando']</msg>
<var>${auth}</var>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-06-16T19:13:01.905302" elapsed="0.000418"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:01.906187" level="INFO">Creating Session using : alias=auth_session, url=http://172.23.208.1, headers={},                     cookies={}, auth=&lt;requests.auth.HTTPBasicAuth object at 0x7ba5a0d64b50&gt;, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>auth_session</arg>
<arg>${login_url}</arg>
<arg>auth=${auth}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-06-16T19:13:01.905888" elapsed="0.000729"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:02.008525" level="INFO">POST Request : url=http://172.23.208.1/user/login 
 path_url=/user/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0', 'Authorization': 'Basic QXR1ck06VGVzdGFuZG8='} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:02.008876" level="INFO">POST Response : url=http://172.23.208.1/user/login 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:02 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={"msg":"Success logging in","token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgyfQ.VFwgmK7P7I1cCFMzD0H29Lyp9rNAIAx1cSAavwO0I5I"}
 
 </msg>
<msg time="2025-06-16T19:13:02.009232" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-06-16T19:13:01.906793" elapsed="0.102574"/>
</kw>
<if>
<branch type="IF" condition="${response.status_code} == 401">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${header}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:02.011087" elapsed="0.000241"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${body}</var>
<arg>username=${USERNAME}</arg>
<arg>password=${PASSWORD}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:02.011539" elapsed="0.000145"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<var>${response}</var>
<arg>url=${login_url}/user/create</arg>
<arg>headers=${header}</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:02.011897" elapsed="0.000134"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:02.012258" elapsed="0.000153"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<var>${response}</var>
<arg>auth_session</arg>
<arg>/user/login</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" start="2025-06-16T19:13:02.012592" elapsed="0.000107"/>
</kw>
<status status="NOT RUN" start="2025-06-16T19:13:02.009710" elapsed="0.003095"/>
</branch>
<status status="PASS" start="2025-06-16T19:13:02.009655" elapsed="0.003222"/>
</if>
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:02.013963" level="INFO">${AUTH_TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgyfQ.VFwgmK7P7I1cCFMzD0H29Lyp9rNAIAx1cSAavwO0I5I</msg>
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-06-16T19:13:02.013018" elapsed="0.001232"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.904977" elapsed="0.109440"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.904524" elapsed="0.110025"/>
</kw>
<kw name="QUANDO ele faz a requisição de verificar se um produto existe com ID inexistente" owner="productsSteps">
<kw name="Verificar existencia de produto" owner="products">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-06-16T19:13:02.017481" level="INFO">&amp;{headers} = { content-type=application/json | authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgyfQ.VFwgmK7P7I1cCFMzD0H29Lyp9rNAIAx1cSAavwO0I5I }</msg>
<var>&amp;{headers}</var>
<arg>content-type=application/json</arg>
<arg>authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-06-16T19:13:02.017057" elapsed="0.000603"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-06-16T19:13:02.032429" level="INFO">GET Request : url=http://172.23.208.1/products/exists/999999 
 path_url=/products/exists/999999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkF0dXJNIiwiZXhwIjoxNzUwMTk4MzgyfQ.VFwgmK7P7I1cCFMzD0H29Lyp9rNAIAx1cSAavwO0I5I'} 
 body=None 
 </msg>
<msg time="2025-06-16T19:13:02.032745" level="INFO">GET Response : url=http://172.23.208.1/products/exists/999999 
 status=200, reason=OK 
 headers={'Server': 'nginx/1.28.0', 'Date': 'Mon, 16 Jun 2025 22:13:02 GMT', 'Content-Type': 'application/json', 'Content-Length': '22', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'} 
 body={
  "status": false
}
 
 </msg>
<msg time="2025-06-16T19:13:02.033133" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>url=${products_url}/exists/${id}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-06-16T19:13:02.018390" elapsed="0.014897"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-06-16T19:13:02.033560" elapsed="0.000384"/>
</return>
<msg time="2025-06-16T19:13:02.034273" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>id=999999</arg>
<status status="PASS" start="2025-06-16T19:13:02.016498" elapsed="0.017942"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-06-16T19:13:02.035825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg time="2025-06-16T19:13:02.036090" level="INFO">${response} = None</msg>
<var>${response}</var>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-06-16T19:13:02.034887" elapsed="0.001319"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:02.015328" elapsed="0.021115"/>
</kw>
<kw name="ENTÃO o sistema deve retornar False e sucesso" owner="productsSteps">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-16T19:13:02.038570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-16T19:13:02.037931" elapsed="0.000861"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-06-16T19:13:02.039525" level="INFO">Argument types are:
&lt;class 'bool'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()['status']}</arg>
<arg>False</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-06-16T19:13:02.038997" elapsed="0.000812"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:02.037189" elapsed="0.002800"/>
</kw>
<status status="PASS" start="2025-06-16T19:13:01.904019" elapsed="0.136320"/>
</test>
<status status="FAIL" start="2025-06-16T19:12:55.918023" elapsed="6.124593"/>
</suite>
<status status="FAIL" start="2025-06-16T19:12:55.916908" elapsed="6.127910"/>
</suite>
<status status="FAIL" start="2025-06-16T19:12:55.915856" elapsed="6.130876"/>
</suite>
<status status="FAIL" start="2025-06-16T19:12:55.914544" elapsed="6.134015"/>
</suite>
<status status="FAIL" start="2025-06-16T19:12:55.899390" elapsed="6.150896"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Inmetrics---Desafios" id="s1" pass="10" fail="2" skip="0">Inmetrics---Desafios</stat>
<stat name="Robot Tests" id="s1-s1" pass="10" fail="2" skip="0">Inmetrics---Desafios.Robot Tests</stat>
<stat name="TestCases" id="s1-s1-s1" pass="10" fail="2" skip="0">Inmetrics---Desafios.Robot Tests.TestCases</stat>
<stat name="Gherkins" id="s1-s1-s1-s1" pass="10" fail="2" skip="0">Inmetrics---Desafios.Robot Tests.TestCases.Gherkins</stat>
<stat name="productsGherkins" id="s1-s1-s1-s1-s1" pass="10" fail="2" skip="0">Inmetrics---Desafios.Robot Tests.TestCases.Gherkins.productsGherkins</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
